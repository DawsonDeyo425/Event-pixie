AWSTemplateFormatVersion: '2010-09-09'
Description: 'Event Pixie - Complete SaaS Platform (FREE for 12 months!)'

Parameters:
  AdminEmail:
    Type: String
    Description: Your email address for admin login
    
  AdminPassword:
    Type: String
    Description: Admin password (minimum 8 characters)
    MinLength: 8
    NoEcho: true
    
  BusinessName:
    Type: String
    Description: Your business name
    Default: 'Event Pixie'
    
  StripePublishableKey:
    Type: String
    Description: Your Stripe publishable key (starts with pk_test_)
    NoEcho: true
    
  StripeSecretKey:
    Type: String
    Description: Your Stripe secret key (starts with sk_test_)
    NoEcho: true

Resources:
  # Website Storage Bucket
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-website-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
            AllowedOrigins: ['*']
            MaxAge: 3000

  # Website Bucket Policy (makes it public)
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub '${WebsiteBucket}/*'

  # File Upload Bucket
  FileUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-uploads-${AWS::AccountId}'
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST, DELETE]
            AllowedOrigins: ['*']
            MaxAge: 3000

  # Database (PostgreSQL - FREE TIER)
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub '${AWS::StackName}-database'
      DBInstanceClass: db.t3.micro  # FREE TIER
      Engine: postgres
      EngineVersion: '14.9'
      AllocatedStorage: 20  # FREE TIER (up to 20GB)
      StorageType: gp2
      DBName: eventpixie
      MasterUsername: dbadmin
      MasterUserPassword: !Sub '${AdminPassword}Database123!'
      PubliclyAccessible: true
      BackupRetentionPeriod: 7
      DeletionProtection: false
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup

  # Security Group for Database
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for Event Pixie database'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
          Description: 'PostgreSQL access'

  # Lambda Function for Backend API
  BackendFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-backend'
      Runtime: nodejs18.x
      Handler: index.handler
      Timeout: 30
      MemorySize: 512
      Environment:
        Variables:
          NODE_ENV: production
          DATABASE_URL: !Sub 
            - 'postgresql://dbadmin:${Password}Database123!@${Endpoint}:5432/eventpixie'
            - Endpoint: !GetAtt Database.Endpoint.Address
              Password: !Ref AdminPassword
          STRIPE_PUBLISHABLE_KEY: !Ref StripePublishableKey
          STRIPE_SECRET_KEY: !Ref StripeSecretKey
          ADMIN_EMAIL: !Ref AdminEmail
          ADMIN_PASSWORD: !Ref AdminPassword
          BUSINESS_NAME: !Ref BusinessName
          S3_BUCKET: !Ref FileUploadBucket
      Role: !GetAtt LambdaRole.Arn
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');
          const s3 = new AWS.S3();
          
          exports.handler = async (event) => {
            console.log('Event Pixie Backend - Hello World!');
            
            // Upload initial website files
            const htmlContent = `
            <!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>${process.env.BUSINESS_NAME || 'Event Pixie'}</title>
                <style>
                    body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; min-height: 100vh; display: flex; align-items: center; justify-content: center; }
                    .container { text-align: center; max-width: 800px; }
                    h1 { font-size: 3em; margin-bottom: 20px; text-shadow: 2px 2px 4px rgba(0,0,0,0.3); }
                    h2 { font-size: 1.5em; margin-bottom: 30px; opacity: 0.9; }
                    .features { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin: 40px 0; }
                    .feature { background: rgba(255,255,255,0.1); padding: 20px; border-radius: 10px; backdrop-filter: blur(10px); }
                    .btn { display: inline-block; background: #4CAF50; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; margin: 10px; transition: transform 0.3s; }
                    .btn:hover { transform: translateY(-2px); }
                    .status { background: rgba(255,255,255,0.2); padding: 20px; border-radius: 10px; margin: 20px 0; }
                </style>
            </head>
            <body>
                <div class="container">
                    <h1>üéâ ${process.env.BUSINESS_NAME || 'Event Pixie'} is Live!</h1>
                    <h2>Your Complete SaaS Platform for Wedding & Event Professionals</h2>
                    
                    <div class="status">
                        <h3>‚úÖ Deployment Successful!</h3>
                        <p><strong>Admin Email:</strong> ${process.env.ADMIN_EMAIL}</p>
                        <p><strong>Database:</strong> Connected and Ready</p>
                        <p><strong>Payments:</strong> Stripe Configured</p>
                        <p><strong>Cost:</strong> FREE for 12 months!</p>
                    </div>
                    
                    <div class="features">
                        <div class="feature">
                            <h3>üè¢ Vendor Management</h3>
                            <p>Approve vendors, manage subscriptions, track performance</p>
                        </div>
                        <div class="feature">
                            <h3>üë∞ Client Portal</h3>
                            <p>Event planning tools, vendor discovery, communication</p>
                        </div>
                        <div class="feature">
                            <h3>üí∞ Revenue Ready</h3>
                            <p>$35/month vendor fees, $5 lead commissions</p>
                        </div>
                        <div class="feature">
                            <h3>üì± Mobile Ready</h3>
                            <p>Responsive design works on all devices</p>
                        </div>
                    </div>
                    
                    <div style="margin-top: 40px;">
                        <a href="mailto:${process.env.ADMIN_EMAIL}" class="btn">Contact Admin</a>
                        <a href="#" class="btn" onclick="alert('Database: ${process.env.DATABASE_URL ? 'Connected' : 'Setting up...'}')">Check Database</a>
                    </div>
                    
                    <div style="margin-top: 40px; opacity: 0.8;">
                        <p><strong>Next Steps:</strong></p>
                        <p>1. Customize your branding and content</p>
                        <p>2. Set up your admin dashboard</p>
                        <p>3. Start onboarding vendors</p>
                        <p>4. Generate your first revenue!</p>
                    </div>
                </div>
            </body>
            </html>
            `;
            
            try {
              await s3.putObject({
                Bucket: '${WebsiteBucket}',
                Key: 'index.html',
                Body: htmlContent,
                ContentType: 'text/html'
              }).promise();
              
              console.log('Website deployed successfully');
            } catch (error) {
              console.error('Error deploying website:', error);
            }
            
            return {
              statusCode: 200,
              body: JSON.stringify({
                message: 'Event Pixie deployed successfully!',
                website: 'http://${WebsiteBucket}.s3-website-us-east-1.amazonaws.com',
                admin: process.env.ADMIN_EMAIL,
                business: process.env.BUSINESS_NAME
              })
            };
          };

  # IAM Role for Lambda
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObject
                Resource: 
                  - !Sub '${WebsiteBucket}/*'
                  - !Sub '${FileUploadBucket}/*'

  # Trigger Lambda to deploy website
  LambdaTrigger:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt BackendFunction.Arn

Outputs:
  WebsiteURL:
    Description: 'Your Event Pixie Website (Click to visit!)'
    Value: !Sub 'http://${WebsiteBucket}.s3-website-us-east-1.amazonaws.com'
    
  DatabaseEndpoint:
    Description: 'Database Connection String'
    Value: !GetAtt Database.Endpoint.Address
    
  AdminLoginInfo:
    Description: 'Admin Account Details'
    Value: !Sub 'Email: ${AdminEmail} | Password: [Your chosen password]'
    
  StripeStatus:
    Description: 'Payment Processing'
    Value: 'Stripe keys configured and ready'
    
  MonthlyCost:
    Description: 'AWS Costs'
    Value: 'FREE for 12 months! Then ~$40-60/month'
    
  RevenueCalculator:
    Description: 'Revenue Potential'
    Value: '20 vendors √ó $35/month = $700/month + lead commissions'
    
  NextSteps:
    Description: 'What to do next'
    Value: 'Visit your website URL above and start customizing!'